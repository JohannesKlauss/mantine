{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/contact-icons",
    "result": {"pageContext":{"_component":"ContactIcons","code":"import React from 'react';\nimport { createStyles, ThemeIcon, Text, Group, SimpleGrid, Box } from '@mantine/core';\nimport { Sun, Phone, MapPin, AtSign } from 'react-feather';\n\ntype ContactIconVariant = 'white' | 'gradient';\n\ninterface ContactIconStyles {\n  variant: ContactIconVariant;\n}\n\nconst useStyles = createStyles((theme, { variant }: ContactIconStyles) => ({\n  wrapper: {\n    display: 'flex',\n    alignItems: 'center',\n    color: theme.white,\n  },\n\n  icon: {\n    marginRight: theme.spacing.md,\n    backgroundImage:\n      variant === 'gradient'\n        ? `linear-gradient(135deg, ${theme.colors[theme.primaryColor][4]} 0%, ${\n            theme.colors[theme.primaryColor][6]\n          } 100%)`\n        : 'none',\n    backgroundColor: 'transparent',\n  },\n\n  title: {\n    color: variant === 'gradient' ? theme.colors.gray[6] : theme.colors[theme.primaryColor][0],\n  },\n\n  description: {\n    color: variant === 'gradient' ? theme.black : theme.white,\n  },\n}));\n\ninterface ContactIconProps extends Omit<React.ComponentPropsWithoutRef<'div'>, 'title'> {\n  icon: React.FC<any>;\n  title: React.ReactNode;\n  description: React.ReactNode;\n  variant?: ContactIconVariant;\n}\n\nfunction ContactIcon({\n  icon: Icon,\n  title,\n  description,\n  variant = 'gradient',\n  className,\n  ...others\n}: ContactIconProps) {\n  const { classes, cx } = useStyles({ variant });\n  return (\n    <div className={cx(classes.wrapper, className)} {...others}>\n      {variant === 'gradient' ? (\n        <ThemeIcon size={40} radius=\"md\" className={classes.icon}>\n          <Icon size={22} />\n        </ThemeIcon>\n      ) : (\n        <Icon size={22} style={{ marginRight: 15 }} />\n      )}\n\n      <div>\n        <Text size=\"xs\" className={classes.title}>\n          {title}\n        </Text>\n        <Text className={classes.description}>{description}</Text>\n      </div>\n    </div>\n  );\n}\n\ninterface ContactIconsListProps {\n  data?: ContactIconProps[];\n  variant?: ContactIconVariant;\n}\n\nconst MOCKDATA = [\n  { title: 'Email', description: 'hello@mantine.dev', icon: AtSign },\n  { title: 'Phone', description: '+49 (800) 335 35 35', icon: Phone },\n  { title: 'Address', description: '844 Morris Park avenue', icon: MapPin },\n  { title: 'Working hours', description: '8 a.m. â€“ 11 p.m.', icon: Sun },\n];\n\nexport function ContactIconsList({ data = MOCKDATA, variant }: ContactIconsListProps) {\n  const items = data.map((item, index) => <ContactIcon key={index} variant={variant} {...item} />);\n  return <Group direction=\"column\">{items}</Group>;\n}\n\nexport function ContactIcons() {\n  return (\n    <SimpleGrid cols={2} breakpoints={[{ maxWidth: 755, cols: 1 }]}>\n      <Box\n        sx={(theme) => ({\n          padding: theme.spacing.xl,\n          borderRadius: theme.radius.md,\n          backgroundColor: theme.white,\n        })}\n      >\n        <ContactIconsList />\n      </Box>\n\n      <Box\n        sx={(theme) => ({\n          padding: theme.spacing.xl,\n          borderRadius: theme.radius.md,\n          backgroundImage: `linear-gradient(135deg, ${theme.colors[theme.primaryColor][6]} 0%, ${\n            theme.colors[theme.primaryColor][4]\n          } 100%)`,\n        })}\n      >\n        <ContactIconsList variant=\"white\" />\n      </Box>\n    </SimpleGrid>\n  );\n}\n","category":{"name":"Contact us section","path":"/category/contact/"},"url":"/component/contact-icons","attributes":{"title":"Contact information with icons","category":"contact","author":"rtivital","withColor":true,"dependencies":["/core/select/","/core/text-input/","/dates/date-picker/","react-feather"],"canvas":{"center":true,"maxWidth":980}}}},
    "staticQueryHashes": []}