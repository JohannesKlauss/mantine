{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/navbar-links-group",
    "result": {"pageContext":{"_component":"NavbarLinksGroup","code":"import React, { useState } from 'react';\nimport { Group, Box, Collapse, ThemeIcon, Text, UnstyledButton, createStyles } from '@mantine/core';\nimport { ChevronRightIcon } from '@modulz/radix-icons';\nimport { Icon as TablerIcon, CalendarStats } from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme) => ({\n  control: {\n    fontWeight: 500,\n    display: 'block',\n    width: '100%',\n    padding: `${theme.spacing.xs}px ${theme.spacing.md}px`,\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n    fontSize: theme.fontSizes.sm,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[0],\n      color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n    },\n  },\n\n  link: {\n    fontWeight: 500,\n    display: 'block',\n    textDecoration: 'none',\n    padding: `${theme.spacing.xs}px ${theme.spacing.md}px`,\n    paddingLeft: 31,\n    marginLeft: 30,\n    fontSize: theme.fontSizes.sm,\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.colors.gray[7],\n    borderLeft: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3]\n    }`,\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[0],\n      color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n    },\n  },\n\n  chevron: {\n    transition: 'transform 200ms ease',\n  },\n}));\n\ninterface LinksGroupProps {\n  icon: TablerIcon;\n  label: string;\n  initiallyOpened?: boolean;\n  links?: { label: string; link: string }[];\n}\n\nexport function LinksGroup({ icon: Icon, label, initiallyOpened, links }: LinksGroupProps) {\n  const { classes } = useStyles();\n  const hasLinks = Array.isArray(links);\n  const [opened, setOpened] = useState(initiallyOpened || false);\n  const items = (hasLinks ? links : []).map((link) => (\n    <Text<'a'>\n      component=\"a\"\n      className={classes.link}\n      href={link.link}\n      key={link.label}\n      onClick={(event) => event.preventDefault()}\n    >\n      {link.label}\n    </Text>\n  ));\n\n  return (\n    <>\n      <UnstyledButton onClick={() => setOpened((o) => !o)} className={classes.control}>\n        <Group position=\"apart\" spacing={0}>\n          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n            <ThemeIcon variant=\"light\" size={30}>\n              <Icon size={18} />\n            </ThemeIcon>\n            <Box ml=\"md\">{label}</Box>\n          </Box>\n          {hasLinks && (\n            <ChevronRightIcon\n              className={classes.chevron}\n              style={{ transform: opened ? 'rotate(90deg)' : 'none' }}\n            />\n          )}\n        </Group>\n      </UnstyledButton>\n      {hasLinks ? <Collapse in={opened}>{items}</Collapse> : null}\n    </>\n  );\n}\n\nconst mockdata = {\n  label: 'Releases',\n  icon: CalendarStats,\n  links: [\n    { label: 'Upcoming releases', link: '/' },\n    { label: 'Previous releases', link: '/' },\n    { label: 'Releases schedule', link: '/' },\n  ],\n};\n\nexport function NavbarLinksGroup() {\n  return (\n    <Box\n      sx={(theme) => ({\n        minHeight: 220,\n        padding: theme.spacing.md,\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.white,\n      })}\n    >\n      <LinksGroup {...mockdata} />\n    </Box>\n  );\n}\n","category":{"name":"Navbars","path":"/category/navbars/"},"url":"/component/navbar-links-group","attributes":{"title":"Collapsible links group","category":"navbars","author":"rtivital","withColor":true,"dependencies":["/core/text/","/core/box/","/core/collapse/","/core/theme-icon/","/core/button/#unstyled-button"],"canvas":{"center":true,"maxWidth":320}}}},
    "staticQueryHashes": []}