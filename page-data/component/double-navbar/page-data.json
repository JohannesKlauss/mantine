{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/double-navbar",
    "result": {"pageContext":{"_component":"DoubleNavbar","code":"import React, { useState } from 'react';\nimport {\n  createStyles,\n  Navbar,\n  UnstyledButton,\n  Tooltip,\n  hexToRgba,\n  Title,\n  Image,\n} from '@mantine/core';\nimport {\n  Home2,\n  Gauge,\n  DeviceDesktopAnalytics,\n  Fingerprint,\n  CalendarStats,\n  User,\n  Settings,\n} from 'tabler-icons-react';\nimport logo from '../NavbarMinimal/logo.svg';\n\nconst useStyles = createStyles((theme) => ({\n  wrapper: {\n    display: 'flex',\n  },\n\n  aside: {\n    flex: '0 0 60px',\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.white,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    borderRight: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3]\n    }`,\n  },\n\n  main: {\n    flex: 1,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0],\n  },\n\n  mainLink: {\n    width: 44,\n    height: 44,\n    borderRadius: theme.radius.md,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.colors.gray[7],\n\n    '&:hover': {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n    },\n  },\n\n  mainLinkActive: {\n    '&, &:hover': {\n      backgroundColor:\n        theme.colorScheme === 'dark'\n          ? hexToRgba(theme.colors[theme.primaryColor][9], 0.25)\n          : theme.colors[theme.primaryColor][0],\n      color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 7],\n    },\n  },\n\n  title: {\n    boxSizing: 'border-box',\n    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n    marginBottom: theme.spacing.md,\n    backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[8] : theme.white,\n    padding: theme.spacing.md,\n    paddingTop: 18,\n    height: 60,\n    borderBottom: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3]\n    }`,\n  },\n\n  logo: {\n    boxSizing: 'border-box',\n    width: '100%',\n    height: 60,\n    paddingTop: theme.spacing.md,\n    borderBottom: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3]\n    }`,\n    marginBottom: theme.spacing.xl,\n  },\n\n  link: {\n    display: 'block',\n    textDecoration: 'none',\n    borderTopRightRadius: theme.radius.md,\n    borderBottomRightRadius: theme.radius.md,\n    color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.colors.gray[7],\n    padding: `${theme.spacing.sm}px ${theme.spacing.md}px`,\n    fontSize: theme.fontSizes.sm,\n    marginLeft: -1,\n    marginRight: theme.spacing.md,\n    fontWeight: 500,\n    borderLeft: `1px solid ${\n      theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3]\n    }`,\n\n    '&:hover': {\n      borderLeftColor: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 6 : 4],\n      backgroundColor:\n        theme.colorScheme === 'dark'\n          ? hexToRgba(theme.colors[theme.primaryColor][9], 0.25)\n          : theme.colors[theme.primaryColor][0],\n      color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 7],\n    },\n  },\n\n  linkActive: {\n    '&, &:hover': {\n      borderLeftColor: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 7 : 5],\n      backgroundColor: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 7 : 5],\n      color: theme.white,\n    },\n  },\n}));\n\nconst mainLinksMockdata = [\n  { icon: Home2, label: 'Home' },\n  { icon: Gauge, label: 'Dashboard' },\n  { icon: DeviceDesktopAnalytics, label: 'Analytics' },\n  { icon: CalendarStats, label: 'Releases' },\n  { icon: User, label: 'Account' },\n  { icon: Fingerprint, label: 'Security' },\n  { icon: Settings, label: 'Settings' },\n];\n\nconst linksMockdata = [\n  'Security',\n  'Settings',\n  'Dashboard',\n  'Releases',\n  'Account',\n  'Orders',\n  'Clients',\n  'Databases',\n  'Pull Requests',\n  'Open Issues',\n  'Wiki pages',\n];\n\nexport function DoubleNavbar() {\n  const { classes, cx } = useStyles();\n  const [active, setActive] = useState('Releases');\n  const [activeLink, setActiveLink] = useState('Settings');\n\n  const mainLinks = mainLinksMockdata.map((link) => (\n    <Tooltip label={link.label} position=\"right\" withArrow transitionDuration={0}>\n      <UnstyledButton\n        onClick={() => setActive(link.label)}\n        className={cx(classes.mainLink, { [classes.mainLinkActive]: link.label === active })}\n      >\n        <link.icon />\n      </UnstyledButton>\n    </Tooltip>\n  ));\n\n  const links = linksMockdata.map((link) => (\n    <a\n      className={cx(classes.link, { [classes.linkActive]: activeLink === link })}\n      href=\"/\"\n      onClick={(event) => {\n        event.preventDefault();\n        setActiveLink(link);\n      }}\n      key={link}\n    >\n      {link}\n    </a>\n  ));\n\n  return (\n    <Navbar height={750}>\n      <Navbar.Section grow className={classes.wrapper}>\n        <div className={classes.aside}>\n          <div className={classes.logo}>\n            <Image src={logo} alt=\"Mantine logo\" width={30} mx=\"auto\" />\n          </div>\n          {mainLinks}\n        </div>\n        <div className={classes.main}>\n          <Title order={4} className={classes.title}>\n            {active}\n          </Title>\n\n          {links}\n        </div>\n      </Navbar.Section>\n    </Navbar>\n  );\n}\n","category":{"name":"Navbars","path":"/category/navbars/"},"url":"/component/double-navbar","attributes":{"title":"Navbar with 2 sections","category":"navbars","author":"rtivital","withColor":true,"dependencies":[],"canvas":{"center":false}}}},
    "staticQueryHashes": []}