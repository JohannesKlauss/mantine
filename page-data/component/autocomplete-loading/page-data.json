{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/autocomplete-loading",
    "result": {"pageContext":{"_component":"AutocompleteLoading","code":"import React, { useState, useRef } from 'react';\nimport { Autocomplete, Loader } from '@mantine/core';\n\nexport function AutocompleteLoading() {\n  const timeoutRef = useRef<number>(-1);\n  const [value, setValue] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState<string[]>([]);\n\n  const handleChange = (val: string) => {\n    window.clearTimeout(timeoutRef.current);\n    setValue(val);\n    setData([]);\n\n    if (val.trim().length === 0 || val.includes('@')) {\n      setLoading(false);\n    } else {\n      setLoading(true);\n      timeoutRef.current = window.setTimeout(() => {\n        setLoading(false);\n        setData(['gmail.com', 'outlook.com', 'yahoo.com'].map((provider) => `${val}@${provider}`));\n      }, 1000);\n    }\n  };\n  return (\n    <Autocomplete\n      value={value}\n      data={data}\n      onChange={handleChange}\n      rightSection={loading ? <Loader size={16} /> : null}\n      label=\"Async Autocomplete data\"\n      placeholder=\"Your email\"\n    />\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/autocomplete-loading","attributes":{"title":"Autocomplete async data","category":"inputs","author":"rtivital","dependencies":["/core/autocomplete/","/core/loader/"],"canvas":{"center":true,"maxWidth":420}}}},
    "staticQueryHashes": []}