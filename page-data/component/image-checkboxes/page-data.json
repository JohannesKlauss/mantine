{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/image-checkboxes",
    "result": {"pageContext":{"_component":"ImageCheckboxes","code":"import React from 'react';\nimport {\n  UnstyledButton,\n  Checkbox,\n  Text,\n  Image,\n  SimpleGrid,\n  createStyles,\n  hexToRgba,\n} from '@mantine/core';\nimport { useUncontrolled } from '@mantine/hooks';\nimport icons from './icons';\n\nconst useStyles = createStyles((theme, { checked }: { checked: boolean }) => ({\n  button: {\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%',\n    transition: 'background-color 150ms ease, border-color 150ms ease',\n    border: `1px solid ${\n      checked\n        ? theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 9 : 6]\n        : theme.colorScheme === 'dark'\n        ? theme.colors.dark[8]\n        : theme.colors.gray[3]\n    }`,\n    borderRadius: theme.radius.sm,\n    padding: theme.spacing.sm,\n    backgroundColor: checked\n      ? theme.colorScheme === 'dark'\n        ? hexToRgba(theme.colors[theme.primaryColor][8], 0.3)\n        : theme.colors[theme.primaryColor][0]\n      : theme.colorScheme === 'dark'\n      ? theme.colors.dark[8]\n      : theme.white,\n  },\n\n  body: {\n    flex: 1,\n    marginLeft: theme.spacing.md,\n  },\n}));\n\ninterface ImageCheckboxProps {\n  checked?: boolean;\n  defaultChecked?: boolean;\n  onChange?(checked: boolean): void;\n  title: string;\n  description: string;\n  image: string;\n}\n\nexport function ImageCheckbox({\n  checked,\n  defaultChecked,\n  onChange,\n  title,\n  description,\n  className,\n  image,\n  ...others\n}: ImageCheckboxProps & Omit<React.ComponentPropsWithoutRef<'button'>, keyof ImageCheckboxProps>) {\n  const [value, handleChange] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n    rule: (val) => typeof val === 'boolean',\n  });\n\n  const { classes, cx } = useStyles({ checked: value });\n\n  return (\n    <UnstyledButton\n      {...others}\n      onClick={() => handleChange(!value)}\n      className={cx(classes.button, className)}\n    >\n      <Image src={image} alt={title} width={40} />\n\n      <div className={classes.body}>\n        <Text color=\"dimmed\" size=\"xs\" sx={{ lineHeight: 1 }} mb={5}>\n          {description}\n        </Text>\n        <Text weight={500} size=\"sm\" sx={{ lineHeight: 1 }}>\n          {title}\n        </Text>\n      </div>\n\n      <Checkbox checked={value} onChange={() => {}} tabIndex={-1} />\n    </UnstyledButton>\n  );\n}\n\nconst mockdata = [\n  { description: 'Sun and sea', title: 'Beach vacation', image: icons.sea },\n  { description: 'Sightseeing', title: 'City trips', image: icons.city },\n  { description: 'Mountains', title: 'Hiking vacation', image: icons.mountain },\n  { description: 'Snow and ice', title: 'Winter vacation', image: icons.winter },\n];\n\nexport function ImageCheckboxes() {\n  const items = mockdata.map((item) => <ImageCheckbox {...item} key={item.title} />);\n  return (\n    <SimpleGrid\n      cols={4}\n      breakpoints={[\n        { maxWidth: 'md', cols: 2 },\n        { maxWidth: 'sm', cols: 1 },\n      ]}\n    >\n      {items}\n    </SimpleGrid>\n  );\n}\n","category":{"name":"Inputs","path":"/category/inputs/"},"url":"/component/image-checkboxes","attributes":{"title":"Checkbox with image","category":"inputs","author":"rtivital","withColor":true,"dependencies":["/core/checkbox/","/core/paper/","/core/text/","/core/image/","/core/simple-grid/","/core/button/#unstyled-button","https://icons8.com/"],"canvas":{"center":true,"maxWidth":1080}}}},
    "staticQueryHashes": []}