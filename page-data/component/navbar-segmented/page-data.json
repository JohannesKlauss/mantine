{
    "componentChunkName": "component---src-components-gallery-gallery-component-page-tsx",
    "path": "/component/navbar-segmented",
    "result": {"pageContext":{"_component":"NavbarSegmented","code":"import React, { useState } from 'react';\nimport {\n  Navbar,\n  SegmentedControl,\n  Text,\n  createStyles,\n  getFocusStyles,\n  hexToRgba,\n} from '@mantine/core';\nimport {\n  ShoppingCart,\n  License,\n  Message2,\n  BellRinging,\n  Messages,\n  Fingerprint,\n  Key,\n  Settings,\n  TwoFA,\n  Users,\n  FileAnalytics,\n  DatabaseImport,\n  Receipt2,\n  ReceiptRefund,\n  Logout,\n  SwitchHorizontal,\n} from 'tabler-icons-react';\n\nconst useStyles = createStyles((theme, _params, getRef) => {\n  const icon = getRef('icon');\n\n  return {\n    navbar: {\n      backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.white,\n    },\n\n    title: {\n      textTransform: 'uppercase',\n      letterSpacing: -0.25,\n    },\n\n    link: {\n      ...getFocusStyles(theme),\n      display: 'flex',\n      alignItems: 'center',\n      textDecoration: 'none',\n      fontSize: theme.fontSizes.sm,\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[1] : theme.colors.gray[7],\n      padding: `${theme.spacing.xs}px ${theme.spacing.sm}px`,\n      borderRadius: theme.radius.sm,\n      fontWeight: 500,\n\n      '&:hover': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.colors.gray[0],\n        color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n\n        [`& .${icon}`]: {\n          color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n        },\n      },\n    },\n\n    linkIcon: {\n      ref: icon,\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[2] : theme.colors.gray[6],\n      marginRight: theme.spacing.sm,\n    },\n\n    linkActive: {\n      '&, &:hover': {\n        backgroundColor:\n          theme.colorScheme === 'dark'\n            ? hexToRgba(theme.colors[theme.primaryColor][9], 0.25)\n            : theme.colors[theme.primaryColor][0],\n        color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 7],\n        [`& .${icon}`]: {\n          color: theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 4 : 7],\n        },\n      },\n    },\n\n    footer: {\n      borderTop: `1px solid ${\n        theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3]\n      }`,\n      paddingTop: theme.spacing.md,\n    },\n  };\n});\n\nconst tabs = {\n  account: [\n    { link: '', label: 'Notifications', icon: BellRinging },\n    { link: '', label: 'Billing', icon: Receipt2 },\n    { link: '', label: 'Security', icon: Fingerprint },\n    { link: '', label: 'SSH Keys', icon: Key },\n    { link: '', label: 'Databases', icon: DatabaseImport },\n    { link: '', label: 'Authentication', icon: TwoFA },\n    { link: '', label: 'Other Settings', icon: Settings },\n  ],\n  general: [\n    { link: '', label: 'Orders', icon: ShoppingCart },\n    { link: '', label: 'Receipts', icon: License },\n    { link: '', label: 'Reviews', icon: Message2 },\n    { link: '', label: 'Messages', icon: Messages },\n    { link: '', label: 'Customers', icon: Users },\n    { link: '', label: 'Refunds', icon: ReceiptRefund },\n    { link: '', label: 'Files', icon: FileAnalytics },\n  ],\n};\n\ntype NavbarTab = 'account' | 'general';\n\nexport function NavbarSegmented() {\n  const { classes, cx } = useStyles();\n  const [section, setSection] = useState<NavbarTab>('account');\n  const [active, setActive] = useState('Billing');\n\n  const links = tabs[section].map((item) => (\n    <a\n      className={cx(classes.link, { [classes.linkActive]: item.label === active })}\n      href={item.link}\n      key={item.label}\n      onClick={(event) => {\n        event.preventDefault();\n        setActive(item.label);\n      }}\n    >\n      <item.icon className={classes.linkIcon} />\n      <span>{item.label}</span>\n    </a>\n  ));\n\n  return (\n    <Navbar height={840} padding=\"md\" className={classes.navbar}>\n      <Navbar.Section>\n        <Text weight={500} size=\"sm\" className={classes.title} color=\"dimmed\" mb=\"xs\">\n          bgluesticker@mantine.dev\n        </Text>\n\n        <SegmentedControl<NavbarTab>\n          value={section}\n          onChange={setSection}\n          transitionTimingFunction=\"ease\"\n          fullWidth\n          data={[\n            { label: 'Account', value: 'account' },\n            { label: 'System', value: 'general' },\n          ]}\n        />\n      </Navbar.Section>\n\n      <Navbar.Section grow mt=\"xl\">\n        {links}\n      </Navbar.Section>\n\n      <Navbar.Section className={classes.footer}>\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <SwitchHorizontal className={classes.linkIcon} />\n          <span>Change account</span>\n        </a>\n\n        <a href=\"#\" className={classes.link} onClick={(event) => event.preventDefault()}>\n          <Logout className={classes.linkIcon} />\n          <span>Logout</span>\n        </a>\n      </Navbar.Section>\n    </Navbar>\n  );\n}\n","category":{"name":"Navbars","path":"/category/navbars/"},"url":"/component/navbar-segmented","attributes":{"title":"Navbar with SegmentedControl","category":"navbars","author":"rtivital","withColor":true,"dependencies":["/core/app-shell/","/core/segmented-control/","/core/text/","tabler-icons-react"],"canvas":{"center":false}}}},
    "staticQueryHashes": []}