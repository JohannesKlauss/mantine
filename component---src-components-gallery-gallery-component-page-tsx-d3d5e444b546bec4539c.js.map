{"version":3,"file":"component---src-components-gallery-gallery-component-page-tsx-d3d5e444b546bec4539c.js","mappings":"yUAoBaA,GAAQC,EAAAA,EAAAA,aACnB,WASEC,GACI,IARFC,EAQC,EARDA,OAQC,IAPDC,SAAAA,OAOC,MAPU,CAAEC,OAAQ,EAAGC,MAAO,GAO9B,MANDC,OAAAA,OAMC,MANQ,IAMR,EALDC,EAKC,EALDA,UACAC,EAIC,EAJDA,GACGC,GAGF,YACH,GAAiCC,EAAAA,EAAAA,GAAM,CAAEH,UAAAA,EAAWC,GAAAA,IAA5CG,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,IAAKC,EAA1B,EAA0BA,GAE1B,OACE,gBAACC,EAAA,EAAD,CAAQR,OAAQA,EAAQJ,OAAQA,GAC9B,qCACEK,UAAWM,EAAGD,EAAI,OAAD,QAAGT,SAAU,SAAYA,IAAaQ,GACvDV,IAAKA,GACDQ,QAOdV,EAAMgB,YAAc,sB,aC1Cb,SAASC,EAAyBC,GACvC,OACE,gBAAClB,EAAD,CAAOI,SAAU,CAAEC,OAAQ,EAAGc,KAAM,EAAGb,MAAO,GAAKC,OAAQ,GACzD,gBAACa,EAAA,EAAD,iBAAkBF,EAAlB,CAAyBG,iBAAe,EAACC,MAAO,CAAEC,aAAc,OCStE,SAASC,EAAT,GAIkC,IAHhCC,EAG+B,EAH/BA,YACAC,EAE+B,EAF/BA,aACWC,EACoB,EAD/BC,UAEMC,GAAQC,EAAAA,EAAAA,MACd,OACE,uBAAKR,MAAO,CAAES,QAASN,EAAYO,WAAWC,OAAOC,SAAWL,EAAMM,QAAQC,GAAK,IACjF,gBAACC,EAAA,EAAD,CACEJ,OAAQR,EAAYO,WAAWC,OAC/BK,cAAeb,EAAYO,WAAWC,OAAOC,UAE7C,gBAACK,EAAA,GAAD,CAAiBV,MAAO,CAAEW,YAAaX,EAAMW,YAAad,aAAAA,IACxD,gBAACC,EAAcF,EAAYO,WAAWd,UAWjC,SAASuB,EAAT,GAA2E,IAA3ChB,EAA0C,EAA1CA,YAC7C,GAA0BiB,EAAAA,EAAAA,UAAS,WAA5BC,EAAP,KAAcC,EAAd,KACA,GAAwCF,EAAAA,EAAAA,UAAS,QAA1ChB,EAAP,KAAqBmB,EAArB,KAEA,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAMC,MAAOvB,EAAYO,WAAWgB,QAEpC,gBAAC/B,EAAD,eACE0B,MAAOA,EACPM,cAAeL,EACflB,aAAcA,EACdwB,qBAAsBL,GAClBpB,IAGK,YAAVkB,EACC,gBAACnB,EAAD,CACEI,UAAWuB,EAAkB1B,EAAY2B,YACzC1B,aAAcA,EACdD,YAAaA,IAGf,gBAAC4B,EAAA,EAAD,CAAOC,SAAS,OAAO7B,EAAY8B","sources":["webpack://mantine-gallery/../src/mantine-core/src/components/Affix/Affix.tsx","webpack://mantine-gallery/./src/components/Gallery/components/ComponentPreviewControls/ComponentPreviewControls.tsx","webpack://mantine-gallery/./src/components/Gallery/GalleryComponentPage.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport { useSx, DefaultProps } from '@mantine/styles';\nimport { Portal } from '../Portal/Portal';\n\nexport interface AffixProps extends DefaultProps, React.ComponentPropsWithoutRef<'div'> {\n  /** Element where portal should be rendered, by default new div element is created and appended to document.body */\n  target?: HTMLDivElement;\n\n  /** Root element z-index property */\n  zIndex?: number;\n\n  /** Fixed position in px */\n  position?: {\n    top?: string | number;\n    left?: string | number;\n    bottom?: string | number;\n    right?: string | number;\n  };\n}\n\nexport const Affix = forwardRef<HTMLDivElement, AffixProps>(\n  (\n    {\n      target,\n      position = { bottom: 0, right: 0 },\n      zIndex = 1000,\n      className,\n      sx,\n      ...others\n    }: AffixProps,\n    ref\n  ) => {\n    const { sxClassName, css, cx } = useSx({ className, sx });\n\n    return (\n      <Portal zIndex={zIndex} target={target}>\n        <div\n          className={cx(css({ position: 'fixed', ...position }), sxClassName)}\n          ref={ref}\n          {...others}\n        />\n      </Portal>\n    );\n  }\n);\n\nAffix.displayName = '@mantine/core/Affix';\n","import React from 'react';\nimport { Affix } from '@mantine/core';\nimport { CanvasHeader, CanvasHeaderProps } from '../ComponentCanvas/CanvasHeader/CanvasHeader';\n\nexport function ComponentPreviewControls(props: CanvasHeaderProps) {\n  return (\n    <Affix position={{ bottom: 0, left: 0, right: 0 }} zIndex={1}>\n      <CanvasHeader {...props} excludeExternal style={{ borderBottom: 0 }} />\n    </Affix>\n  );\n}\n","import React, { useState } from 'react';\nimport { MantineProvider, useMantineTheme } from '@mantine/core';\nimport { Prism } from '@mantine/prism';\nimport Head from '../Head/Head';\nimport { Layout } from '../Layout/Layout';\nimport * as GalleryComponents from '../../gallery';\nimport { GalleryPreview } from './components/GalleryPreview/GalleryPreview';\nimport { ComponentPreviewControls } from './components/ComponentPreviewControls/ComponentPreviewControls';\nimport { GalleryComponent } from './types';\n\ninterface GalleryComponentPreviewProps {\n  pageContext: GalleryComponent;\n  primaryColor: string;\n  component: any;\n}\n\nfunction GalleryComponentPreview({\n  pageContext,\n  primaryColor,\n  component: Component,\n}: GalleryComponentPreviewProps) {\n  const theme = useMantineTheme();\n  return (\n    <div style={{ padding: pageContext.attributes.canvas.maxWidth ? theme.spacing.sm : 0 }}>\n      <GalleryPreview\n        canvas={pageContext.attributes.canvas}\n        withSpacing={!!pageContext.attributes.canvas.maxWidth}\n      >\n        <MantineProvider theme={{ colorScheme: theme.colorScheme, primaryColor }}>\n          <Component {...pageContext.attributes.props} />\n        </MantineProvider>\n      </GalleryPreview>\n    </div>\n  );\n}\n\ninterface GalleryComponentPageProps {\n  pageContext: GalleryComponent;\n}\n\nexport default function GalleryComponentPage({ pageContext }: GalleryComponentPageProps) {\n  const [state, setState] = useState('preview');\n  const [primaryColor, setPrimaryColor] = useState('blue');\n\n  return (\n    <Layout>\n      <Head title={pageContext.attributes.title} />\n\n      <ComponentPreviewControls\n        state={state}\n        onStateChange={setState}\n        primaryColor={primaryColor}\n        onPrimaryColorChange={setPrimaryColor}\n        {...pageContext}\n      />\n\n      {state === 'preview' ? (\n        <GalleryComponentPreview\n          component={GalleryComponents[pageContext._component]}\n          primaryColor={primaryColor}\n          pageContext={pageContext}\n        />\n      ) : (\n        <Prism language=\"tsx\">{pageContext.code}</Prism>\n      )}\n    </Layout>\n  );\n}\n"],"names":["Affix","forwardRef","ref","target","position","bottom","right","zIndex","className","sx","others","useSx","sxClassName","css","cx","Portal","displayName","ComponentPreviewControls","props","left","CanvasHeader","excludeExternal","style","borderBottom","GalleryComponentPreview","pageContext","primaryColor","Component","component","theme","useMantineTheme","padding","attributes","canvas","maxWidth","spacing","sm","GalleryPreview","withSpacing","MantineProvider","colorScheme","GalleryComponentPage","useState","state","setState","setPrimaryColor","Layout","Head","title","onStateChange","onPrimaryColorChange","GalleryComponents","_component","Prism","language","code"],"sourceRoot":""}